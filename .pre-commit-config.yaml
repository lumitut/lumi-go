# Pre-commit hooks for lumi-go (Go Microservice Template)
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files
# Skip hooks: git commit --no-verify

default_language_version:
  golang: 1.22

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']  # Allow custom tags for K8s/Helm
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Go specific hooks
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      - id: go-fmt
      - id: go-imports
      - id: go-vet
      - id: go-mod-tidy
      - id: go-unit-tests
        args: ['-short']
      - id: golangci-lint
        args: ['--timeout=5m']

  # Security scanning
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.1
    hooks:
      - id: gitleaks
        args: ['--config', '.gitleaks.toml']

  # Go security scanning
  - repo: local
    hooks:
      - id: gosec
        name: Go Security Checker
        entry: gosec
        language: system
        types: [go]
        pass_filenames: false
        args: ['-fmt=json', '-out=/dev/null', '-stdout', './...']

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: ['-d', '{extends: default, rules: {line-length: {max: 120}, comments-indentation: disable}}']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # License header check
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        name: Add license header to Go files
        files: '\.go$'
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - //
        exclude: |
          (?x)^(
            .*\.pb\.go$|
            .*\.gen\.go$|
            vendor/.*
          )$

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Custom local hooks
  - repo: local
    hooks:
      - id: no-direct-pushes
        name: Prevent direct pushes to protected branches
        entry: bash -c 'if [[ "$PRE_COMMIT_FROM_REF" == *"main"* ]] || [[ "$PRE_COMMIT_FROM_REF" == *"master"* ]]; then echo "Direct pushes to main/master are not allowed. Please create a feature branch."; exit 1; fi || exit 0'
        language: system
        pass_filenames: false
        always_run: true
        stages: [push]

      - id: check-generated-files
        name: Check generated files are up to date
        entry: make gen-check
        language: system
        pass_filenames: false
        types: [go]

      - id: check-go-mod
        name: Check go.mod is tidy
        entry: bash -c 'go mod tidy && git diff --exit-code go.mod go.sum'
        language: system
        pass_filenames: false

exclude: |
  (?x)^(
    .*\.pb\.go$|
    .*\.gen\.go$|
    vendor/.*|
    .*/testdata/.*|
    .*\.min\.js$|
    .*\.min\.css$
  )$
