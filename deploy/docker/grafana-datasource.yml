# Grafana Datasources Configuration
# This file is provisioned automatically when Grafana starts

apiVersion: 1

# List of datasources to insert/update
datasources:
  # Prometheus datasource
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    version: 1
    editable: true
    jsonData:
      timeInterval: "15s"
      queryTimeout: "60s"
      httpMethod: "POST"
      exemplarTraceIdDestinations:
        - datasourceUid: jaeger
          name: trace_id
      # Incremental querying for better performance
      incrementalQuerying: true
      # Custom query parameters
      customQueryParameters: ""
      # Disable metrics lookup
      disableMetricsLookup: false

  # Jaeger datasource for traces
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    uid: jaeger
    version: 1
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        tags: []
        mappedTags:
          - key: service.name
            value: service
      nodeGraph:
        enabled: true

  # PostgreSQL datasource (direct connection)
  - name: PostgreSQL
    type: postgres
    access: proxy
    url: postgres:5432
    database: lumigo
    user: lumigo
    secureJsonData:
      password: lumigo
    jsonData:
      sslmode: "disable"
      maxOpenConns: 10
      maxIdleConns: 5
      connMaxLifetime: 3600
      postgresVersion: 1600 # PostgreSQL 16
      timescaledb: false
    version: 1
    editable: true

  # Redis datasource (requires redis-datasource plugin)
  - name: Redis
    type: redis-datasource
    access: proxy
    url: redis://redis:6379
    version: 1
    editable: true
    jsonData:
      client: standalone
      poolSize: 10
      timeout: 10
      pingInterval: 0
      pipelineWindow: 0

  # Loki datasource for logs (if you add Loki to docker-compose)
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    uid: loki
    version: 1
    editable: true
    jsonData:
      maxLines: 1000
      derivedFields:
        - datasourceUid: jaeger
          matcherRegex: '"trace_id":"([^"]+)"'
          name: trace_id
          url: "$${__value.raw}"
        - datasourceUid: jaeger
          matcherRegex: '"span_id":"([^"]+)"'
          name: span_id
          url: "$${__value.raw}"

# List of datasources to delete from the database
deleteDatasources:
  # - name: old-datasource
  #   orgId: 1

# List of providers
providers:
  # Allow UI updates
  - name: 'default'
    orgId: 1
    folder: ''
    folderUid: ''
    type: file
    disableDeletion: false
    updateIntervalSeconds: 10
    allowUiUpdates: true
    options:
      path: /etc/grafana/provisioning/datasources
