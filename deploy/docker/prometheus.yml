# Prometheus Configuration
# Reference: https://prometheus.io/docs/prometheus/latest/configuration/configuration/

global:
  # How frequently to scrape targets
  scrape_interval: 15s
  # How frequently to evaluate rules
  evaluation_interval: 15s
  # Timeout for scraping
  scrape_timeout: 10s

  # External labels to attach to all time series
  external_labels:
    monitor: 'lumi-go-monitor'
    environment: 'dev'
    cluster: 'docker-compose'

# Alertmanager configuration (optional)
alerting:
  alertmanagers:
    - static_configs:
        - targets: []
          # - 'alertmanager:9093'

# Load rules once and periodically evaluate them
rule_files:
  - '/etc/prometheus/rules/*.yml'

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          component: 'monitoring'

  # lumi-go application metrics
  - job_name: 'lumi-go-app'
    metrics_path: '/metrics'
    scrape_interval: 10s
    static_configs:
      - targets: ['app:9090']
        labels:
          service: 'lumi-go'
          component: 'application'
          instance: 'primary'

    # Optional: Basic auth if needed
    # basic_auth:
    #   username: 'prometheus'
    #   password: 'secret'

    # Metric relabeling
    metric_relabel_configs:
      # Drop expensive histogram buckets if needed
      - source_labels: [__name__]
        regex: 'go_gc_duration_seconds.*'
        action: drop

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    scrape_interval: 10s
    static_configs:
      - targets: ['otel-collector:8888']
        labels:
          service: 'otel-collector'
          component: 'telemetry'

  # PostgreSQL exporter (if using postgres_exporter)
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgresql'
          component: 'database'
    # Only scrape if postgres-exporter is running
    scrape_interval: 30s
    scrape_timeout: 5s

  # Redis exporter (if using redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'redis'
          component: 'cache'
    scrape_interval: 30s
    scrape_timeout: 5s

  # Node exporter for host metrics (if needed)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'
          component: 'infrastructure'

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'
          component: 'visualization'

  # Docker daemon metrics (requires Docker config)
  - job_name: 'docker'
    static_configs:
      - targets: ['host.docker.internal:9323']
        labels:
          service: 'docker'
          component: 'container-runtime'

# Service discovery configurations (for dynamic environments)
# kubernetes_sd_configs:
#   - role: pod
#     namespaces:
#       names:
#         - default
#         - monitoring

# Remote storage configuration (optional)
# remote_write:
#   - url: "http://remote-storage:9090/api/v1/write"
#     queue_config:
#       capacity: 10000
#       max_shards: 5
#       max_samples_per_send: 1000

# remote_read:
#   - url: "http://remote-storage:9090/api/v1/read"
#     read_recent: true
