# Default values for lumi-go
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas
replicaCount: 1

image:
  # -- Image repository
  repository: lumitut/lumi-go
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag (defaults to Chart appVersion)
  tag: ""

# -- Image pull secrets
imagePullSecrets: []

# -- Override name
nameOverride: ""
# -- Override full name
fullnameOverride: ""

serviceAccount:
  # -- Create service account
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- Name of the service account
  name: ""

# -- Pod annotations
podAnnotations: {}

# -- Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  fsGroup: 65532

# -- Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

service:
  # -- Service type
  type: ClusterIP
  # -- HTTP port
  httpPort: 8080
  # -- gRPC port
  rpcPort: 8081
  # -- Metrics port
  metricsPort: 9090
  # -- Annotations for the service
  annotations: {}

ingress:
  # -- Enable ingress
  enabled: false
  # -- Ingress class name
  className: ""
  # -- Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  # -- Ingress hosts
  hosts:
    - host: api.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: api-tls
  #    hosts:
  #      - api.example.com

# -- Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  # -- Enable horizontal pod autoscaling
  enabled: false
  # -- Minimum replicas
  minReplicas: 1
  # -- Maximum replicas
  maxReplicas: 10
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # -- Target memory utilization percentage
  targetMemoryUtilizationPercentage: 80

# -- Node selector
nodeSelector: {}

# -- Tolerations
tolerations: []

# -- Affinity rules
affinity: {}

# Application configuration
config:
  service:
    name: lumi-go
    environment: production
    logLevel: info
    version: "" # Will use Chart appVersion if not set

  server:
    httpPort: "8080"
    rpcPort: "8081"
    httpReadTimeout: "15s"
    httpWriteTimeout: "15s"
    httpIdleTimeout: "60s"
    rpcReadTimeout: "30s"
    rpcWriteTimeout: "30s"
    gracefulShutdownTimeout: "30s"
    enablePProf: false
    pprofPort: "6060"

  # External service clients (all optional)
  clients:
    database:
      enabled: false
      url: ""  # Set via secret in production
    redis:
      enabled: false
      url: ""  # Set via secret in production
    tracing:
      enabled: false
      endpoint: ""  # e.g., otel-collector:4317

  observability:
    logLevel: info
    logFormat: json
    logOutput: stdout
    logSampling: true
    logDevelopment: false
    metricsEnabled: true
    metricsPort: "9090"
    metricsPath: /metrics

  middleware:
    corsEnabled: false
    corsAllowOrigins: []
    corsAllowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    corsAllowHeaders:
      - Origin
      - Content-Type
      - Accept
      - Authorization
    corsExposeHeaders:
      - X-Request-ID
    corsAllowCredentials: false
    corsMaxAge: 12h
    rateLimitEnabled: true
    rateLimitRate: 60
    rateLimitBurst: 10
    rateLimitType: ip
    recoveryStackTrace: false
    recoveryStackSize: 4096
    recoveryPrintStack: false
    requestIDHeader: X-Request-ID
    trustedProxies: []
    trustAllProxies: false
    logSkipPaths:
      - /health
      - /ready
      - /metrics
    logRequestBody: false
    logResponseBody: false
    logSlowThreshold: 1s

  features:
    enableNewAPI: false
    enableBetaFeatures: false
    maintenanceMode: false

# -- Environment variables (additional)
env: []
  # - name: CUSTOM_VAR
  #   value: "custom_value"

# -- Environment variables from secrets
envFrom: []
  # - secretRef:
  #     name: lumi-go-secrets

# -- Volume mounts
volumeMounts: []
  # - name: config
  #   mountPath: /config
  #   readOnly: true

# -- Volumes
volumes: []
  # - name: config
  #   configMap:
  #     name: lumi-go-config

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

# -- Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# -- Network policy
networkPolicy:
  enabled: false
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  egress: []

# Service Monitor for Prometheus Operator
serviceMonitor:
  # -- Enable ServiceMonitor
  enabled: false
  # -- Namespace for ServiceMonitor
  namespace: ""
  # -- Interval at which metrics should be scraped
  interval: 30s
  # -- Timeout for scraping metrics
  scrapeTimeout: 10s
  # -- Additional labels for ServiceMonitor
  labels: {}
  # -- Additional annotations for ServiceMonitor
  annotations: {}

# -- Extra objects to deploy (value evaluated as a template)
extraDeploy: []
