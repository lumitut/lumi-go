# Default values for lumi-go (Go Microservice Template)
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas
replicaCount: 2

image:
  # -- Container image repository
  repository: lumitut/lumi-go
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag (defaults to chart appVersion)
  tag: ""

# -- Image pull secrets for private registries
imagePullSecrets: []
# -- Override the chart name
nameOverride: ""
# -- Override the full chart name
fullnameOverride: ""

serviceAccount:
  # -- Create a service account
  create: true
  # -- Annotations for the service account
  annotations: {}
  # -- Name of the service account (generated if not set)
  name: ""

# -- Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9090"
  prometheus.io/path: "/metrics"

# -- Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534

# -- Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534

service:
  # -- Service type
  type: ClusterIP
  # -- HTTP service port
  httpPort: 8080
  # -- RPC service port
  rpcPort: 8081
  # -- Metrics service port
  metricsPort: 9090
  # -- Service annotations
  annotations: {}

ingress:
  # -- Enable ingress
  enabled: false
  # -- Ingress class name
  className: "nginx"
  # -- Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # nginx.ingress.kubernetes.io/rate-limit: "100"
  # -- Ingress hosts configuration
  hosts:
    - host: api.example.com
      paths:
        - path: /
          pathType: Prefix
  # -- TLS configuration
  tls: []
  #  - secretName: api-tls
  #    hosts:
  #      - api.example.com

# -- Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  # -- Enable horizontal pod autoscaling
  enabled: true
  # -- Minimum replicas
  minReplicas: 2
  # -- Maximum replicas
  maxReplicas: 10
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 70
  # -- Target memory utilization percentage
  targetMemoryUtilizationPercentage: 80

# -- Node selector for pod placement
nodeSelector: {}

# -- Tolerations for pod placement
tolerations: []

# -- Affinity rules for pod placement
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - lumi-go
          topologyKey: kubernetes.io/hostname

# Application configuration
config:
  # -- Environment (dev/staging/prod)
  env: dev
  # -- Log level (debug/info/warn/error)
  logLevel: info
  # -- Gin mode (debug/release/test)
  ginMode: release

  # Timeouts
  timeouts:
    # -- Read timeout
    read: 5s
    # -- Write timeout
    write: 10s
    # -- Idle timeout
    idle: 60s
    # -- Graceful shutdown period
    gracePeriod: 20s

  # Rate limiting
  rateLimit:
    # -- Requests per second
    rps: 100
    # -- Burst size
    burst: 200

  # Circuit breaker
  circuitBreaker:
    # -- Number of failures before opening
    failures: 5
    # -- Timeout before attempting to close
    timeout: 30s

# Health checks
healthcheck:
  # -- Enable liveness probe
  livenessProbe:
    enabled: true
    path: /healthz
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3

  # -- Enable readiness probe
  readinessProbe:
    enabled: true
    path: /readyz
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3

# Observability
observability:
  # -- OpenTelemetry configuration
  otel:
    # -- OTLP endpoint
    endpoint: "otel-collector.observability.svc.cluster.local:4317"
    # -- Enable tracing
    tracingEnabled: true
    # -- Enable metrics
    metricsEnabled: true
    # -- Sampling rate (0.0-1.0)
    samplingRate: 0.1

# Database configuration
database:
  # -- Enable database
  enabled: false
  # -- Database host
  host: "postgresql.database.svc.cluster.local"
  # -- Database port
  port: 5432
  # -- Database name
  name: "lumigo"
  # -- Database user
  user: "lumigo"
  # -- Use existing secret for password
  existingSecret: ""
  # -- Password key in secret
  passwordKey: "password"
  # -- Connection pool settings
  pool:
    maxOpen: 25
    maxIdle: 5
    maxLifetime: 5m

# Redis configuration
redis:
  # -- Enable Redis
  enabled: false
  # -- Redis host
  host: "redis.cache.svc.cluster.local"
  # -- Redis port
  port: 6379
  # -- Redis database
  db: 0
  # -- Use existing secret for password
  existingSecret: ""
  # -- Password key in secret
  passwordKey: "password"

# Authentication configuration
auth:
  # -- Enable JWT authentication
  enabled: false
  # -- JWT issuer
  issuer: "https://auth.example.com"
  # -- JWT audience
  audience: "https://api.example.com"
  # -- JWKS URL
  jwksUrl: "https://auth.example.com/.well-known/jwks.json"

# Feature flags
featureFlags:
  # -- Enable feature flags
  enabled: false
  # -- Provider (unleash/none)
  provider: "none"
  # -- Feature flag service URL
  url: ""
  # -- API token secret
  existingSecret: ""
  # -- Token key in secret
  tokenKey: "token"

# Network policies
networkPolicy:
  # -- Enable network policy
  enabled: false
  # -- Ingress rules
  ingress: []
  # -- Egress rules
  egress: []

# Pod Disruption Budget
podDisruptionBudget:
  # -- Enable PDB
  enabled: true
  # -- Minimum available pods
  minAvailable: 1

# Service Monitor for Prometheus Operator
serviceMonitor:
  # -- Enable ServiceMonitor
  enabled: false
  # -- Scrape interval
  interval: 30s
  # -- Scrape timeout
  scrapeTimeout: 10s
  # -- Additional labels
  labels: {}

# Secrets management
secrets:
  # -- Create secrets from values
  create: false
  # -- External secrets operator
  externalSecrets:
    # -- Enable external secrets
    enabled: false
    # -- Backend type (aws-secrets-manager/vault/etc)
    backend: ""
    # -- Refresh interval
    refreshInterval: 15m

# Additional environment variables
env: []
  # - name: CUSTOM_VAR
  #   value: "custom-value"

# Additional environment variables from secrets
envFrom: []
  # - secretRef:
  #     name: my-secret
  # - configMapRef:
  #     name: my-config

# Additional volumes
volumes: []
  # - name: config
  #   configMap:
  #     name: my-config

# Additional volume mounts
volumeMounts: []
  # - name: config
  #   mountPath: /etc/config
  #   readOnly: true

# Lifecycle hooks
lifecycle: {}
  # preStop:
  #   exec:
  #     command: ["/bin/sh", "-c", "sleep 15"]

# Init containers
initContainers: []
  # - name: migration
  #   image: migrate/migrate
  #   command: ['migrate']
  #   args: ['-path', '/migrations', '-database', 'postgres://...', 'up']

# Sidecar containers
sidecarContainers: []
  # - name: logging-agent
  #   image: fluent/fluent-bit:latest
  #   volumeMounts:
  #     - name: logs
  #       mountPath: /var/log

# Priority class
priorityClassName: ""

# Topology spread constraints
topologySpreadConstraints: []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/instance: lumi-go
